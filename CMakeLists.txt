cmake_minimum_required(VERSION 3.18.0)

project(pwropt)

# I wish generator expressions worked in "set", but they just don't.
if ("${CMAKE_CXX_COMPILER_ID}" STREQUAL "MSVC")
	set(pwr_wall /W4 /permissive-)
	set(pwr_werror /WX)
elseif("${CMAKE_CXX_COMPILER_ID}" STREQUAL "Clang" OR "${CMAKE_CXX_COMPILER_ID}" STREQUAL "GNU")
	set(pwr_wall -Wall -Wextra -pedantic-errors)
	set(pwr_werror -Werror)
endif()

function(pwropt_all_options outputvar)
	set(${outputvar} "pwr_wall;pwr_werror" PARENT_SCOPE)
endfunction()

function(pwropt_target_compile_options target visibility)
	pwropt_all_options(pwropt_all)
	foreach(thing ${ARGN})
		if ("${thing}" IN_LIST pwropt_all)
			cmake_language(EVAL CODE "set(output \"\${${thing}}\")")
			cmake_language(EVAL CODE "target_compile_options(${target} ${visibility} ${output})")
		else()
			message("pwropt_target_compile_options : ${thing} not a pwropt expression, passing on as is")
			cmake_language(EVAL CODE "target_compile_options(${target} ${visibility} ${thing})")
		endif()
	endforeach()
endfunction()

function(pwropt_parse outputvar)
	pwropt_all_options(pwropt_all)
	foreach(thing ${ARGN})
		if ("${thing}" IN_LIST pwropt_all)
			cmake_language(EVAL CODE "set(output \"\${${thing}}\")")
			set(${outputvar} "${output}" PARENT_SCOPE)
		else()
			message("pwropt_parse: ${thing} not a pwropt expression, passing on as is")
			set(${outputvar} "${thing}" PARENT_SCOPE)
		endif()
	endforeach()
endfunction()

# Test that unknowns are passed on as is.
# add_library(what "what.cpp")
# pwropt_target_compile_options(what PUBLIC pwr_wall pwr_werror /W4 /BAD)